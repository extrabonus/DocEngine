import{_ as d,c as e,o as a,ag as i}from"./chunks/framework.Cw7PKvxc.js";const p=JSON.parse('{"title":"Git","description":"","frontmatter":{},"headers":[],"relativePath":"Toolchain/Git.md","filePath":"Toolchain/Git.md"}'),s={name:"Toolchain/Git.md"};function o(r,t,h,n,c,l){return a(),e("div",null,t[0]||(t[0]=[i(`<h1 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h1><p>Git 是一款<strong>分布式版本控制系统</strong>，专为代码变更追踪与团队协作开发设计。</p><h2 id="基础操作" tabindex="-1">基础操作 <a class="header-anchor" href="#基础操作" aria-label="Permalink to &quot;基础操作&quot;">​</a></h2><table tabindex="0"><thead><tr><th>命令</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td><code>git init</code></td><td><code>git init</code></td><td>初始化新仓库</td></tr><tr><td><code>git clone</code></td><td><code>git clone https://github.com/user/repo.git</code></td><td>克隆远程仓库</td></tr><tr><td><code>git status</code></td><td><code>git status</code></td><td>查看工作区状态</td></tr><tr><td><code>git add</code></td><td><code>git add .</code></td><td>添加所有修改到暂存区</td></tr><tr><td><code>git commit</code></td><td><code>git commit -m &quot;feat: add login&quot;</code></td><td>提交到本地仓库</td></tr></tbody></table><h2 id="分支管理" tabindex="-1">分支管理 <a class="header-anchor" href="#分支管理" aria-label="Permalink to &quot;分支管理&quot;">​</a></h2><table tabindex="0"><thead><tr><th>命令</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td><code>git branch</code></td><td><code>git branch</code></td><td>查看本地分支列表</td></tr><tr><td><code>git checkout</code></td><td><code>git checkout -b doc</code></td><td>创建并切换到 <code>doc</code> 分支</td></tr><tr><td><code>git merge</code></td><td><code>git merge doc</code></td><td>将 <code>doc</code> 分支合并到当前分支</td></tr><tr><td><code>git push origin &lt;branch&gt;</code></td><td><code>git push origin doc</code></td><td>推送分支到远程仓库</td></tr></tbody></table><h2 id="版本发布" tabindex="-1">版本发布 <a class="header-anchor" href="#版本发布" aria-label="Permalink to &quot;版本发布&quot;">​</a></h2><h3 id="标签管理" tabindex="-1">标签管理 <a class="header-anchor" href="#标签管理" aria-label="Permalink to &quot;标签管理&quot;">​</a></h3><table tabindex="0"><thead><tr><th>命令</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td><code>git tag</code></td><td><code>git tag</code></td><td>查看所有标签</td></tr><tr><td><code>git tag -a</code></td><td><code>git tag -a v1.0.0 -m &quot;1.0版本发布&quot;</code></td><td>创建带注释的标签</td></tr><tr><td><code>git push --tags</code></td><td><code>git push origin --tags</code></td><td>推送所有标签到远程仓库</td></tr><tr><td><code>git describe</code></td><td><code>git describe --tags</code></td><td>获取当前版本描述（最近标签）</td></tr><tr><td><code>git checkout &lt;tag&gt;</code></td><td><code>git checkout v1.0.0</code></td><td>切换到指定标签版本</td></tr></tbody></table><h3 id="发布流程" tabindex="-1">发布流程 <a class="header-anchor" href="#发布流程" aria-label="Permalink to &quot;发布流程&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. 确保主分支（如 main）最新</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. 合并功能分支到主分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-ff</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fix/login</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 非快进合并，保留合并记录</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. 创建版本标签</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tag</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v1.0.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Release version 1.0.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 4. 推送代码和标签</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tags</span></span></code></pre></div><h2 id="远程仓库协作" tabindex="-1">远程仓库协作 <a class="header-anchor" href="#远程仓库协作" aria-label="Permalink to &quot;远程仓库协作&quot;">​</a></h2><table tabindex="0"><thead><tr><th>命令</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td><code>git remote -v</code></td><td><code>git remote -v</code></td><td>查看远程仓库地址</td></tr><tr><td><code>git fetch</code></td><td><code>git fetch origin</code></td><td>拉取远程仓库更新（不合并）</td></tr><tr><td><code>git pull</code></td><td><code>git pull origin main</code></td><td>拉取并合并远程分支到当前分支</td></tr><tr><td><code>git push</code></td><td><code>git push origin main --force</code></td><td><strong>强制推送</strong>（慎用）</td></tr></tbody></table><h2 id="撤销与修复" tabindex="-1">撤销与修复 <a class="header-anchor" href="#撤销与修复" aria-label="Permalink to &quot;撤销与修复&quot;">​</a></h2><table tabindex="0"><thead><tr><th>命令</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td><code>git reset</code></td><td><code>git reset --soft HEAD~1</code></td><td>撤销最后一次提交（保留修改）</td></tr><tr><td><code>git revert</code></td><td><code>git revert HEAD</code></td><td>撤销某次提交（生成新提交）</td></tr><tr><td><code>git cherry-pick</code></td><td><code>git cherry-pick doc</code></td><td>将某次提交应用到当前分支</td></tr><tr><td><code>git stash</code></td><td><code>git stash</code></td><td>暂存当前修改（快速切分支）</td></tr></tbody></table><h2 id="日志与历史" tabindex="-1">日志与历史 <a class="header-anchor" href="#日志与历史" aria-label="Permalink to &quot;日志与历史&quot;">​</a></h2><table tabindex="0"><thead><tr><th>命令</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td><code>git log</code></td><td><code>git log --oneline --graph</code></td><td>查看提交历史（简洁版）</td></tr><tr><td><code>git diff</code></td><td><code>git diff HEAD~2..HEAD</code></td><td>对比两次提交差异</td></tr><tr><td><code>git blame</code></td><td><code>git blame README.md</code></td><td>查看文件修改历史</td></tr></tbody></table><h2 id="分支命名规范" tabindex="-1">分支命名规范 <a class="header-anchor" href="#分支命名规范" aria-label="Permalink to &quot;分支命名规范&quot;">​</a></h2><table tabindex="0"><thead><tr><th><strong>分类</strong></th><th><strong>前缀</strong></th><th><strong>描述</strong></th><th><strong>示例</strong></th></tr></thead><tbody><tr><td><strong>新增文档</strong></td><td><code>add/</code></td><td>新增文档或章节</td><td><code>add/user-guide</code></td></tr><tr><td><strong>文档更新</strong></td><td><code>update/</code></td><td>更新现有文档内容</td><td><code>update/readme</code></td></tr><tr><td><strong>文档修复</strong></td><td><code>fix/</code></td><td>修复文档中的错误（如拼写错误、格式问题等）</td><td><code>fix/typo</code></td></tr><tr><td><strong>文档重构</strong></td><td><code>refactor/</code></td><td>重构文档结构或内容，不涉及功能变更</td><td><code>refactor/structure</code></td></tr><tr><td><strong>翻译相关</strong></td><td><code>translate/</code></td><td>文档翻译任务</td><td><code>translate/zh-cn</code></td></tr><tr><td><strong>版本发布</strong></td><td><code>release/</code></td><td>文档版本发布</td><td><code>release/v1.0.0</code></td></tr><tr><td><strong>日常维护</strong></td><td><code>chore/</code></td><td>文档相关的日常维护任务（如工具配置、依赖更新等）</td><td><code>chore/tooling</code></td></tr></tbody></table><h2 id="版本号规范" tabindex="-1">版本号规范 <a class="header-anchor" href="#版本号规范" aria-label="Permalink to &quot;版本号规范&quot;">​</a></h2><table tabindex="0"><thead><tr><th>版本号</th><th>格式</th><th>说明</th></tr></thead><tbody><tr><td><strong>主版本</strong></td><td><code>vX.0.0</code></td><td>大版本发布，通常跟随产品</td></tr><tr><td><strong>次版本</strong></td><td><code>v1.X.0</code></td><td>向下兼容的功能新增</td></tr><tr><td><strong>修订号</strong></td><td><code>v1.0.X</code></td><td>向下兼容的问题修复</td></tr></tbody></table>`,21)]))}const k=d(s,[["render",o]]);export{p as __pageData,k as default};
