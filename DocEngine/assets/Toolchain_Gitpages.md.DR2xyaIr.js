import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.Cw7PKvxc.js";const l="/DocEngine/assets/image-4.BxPeUIF-.png",h="/DocEngine/assets/image-5.BwdHZl6a.png",n="/DocEngine/assets/image-6.BpDmaqmq.png",p="/DocEngine/assets/image-8.CIVbhCf8.png",o="/DocEngine/assets/image-7.BzmvtTph.png",y=JSON.parse('{"title":"Github pages","description":"","frontmatter":{},"headers":[],"relativePath":"Toolchain/Gitpages.md","filePath":"Toolchain/Gitpages.md"}'),d={name:"Toolchain/Gitpages.md"};function r(k,s,c,g,u,b){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="github-pages" tabindex="-1">Github pages <a class="header-anchor" href="#github-pages" aria-label="Permalink to &quot;Github pages&quot;">​</a></h1><h2 id="基础准备" tabindex="-1">基础准备 <a class="header-anchor" href="#基础准备" aria-label="Permalink to &quot;基础准备&quot;">​</a></h2><ol><li>确保你的项目有静态网站入口（如 <code>index.html</code>），Vitepress默认有<code>index.html</code>文件，需进入构建好的静态文件目录：<code>cd docs/.vitepress/dist</code>。</li><li>如果项目是纯代码，需要先构建生成 <code>dist</code> 或 <code>docs</code> 目录的静态文件。</li></ol><h2 id="配置流程" tabindex="-1">配置流程 <a class="header-anchor" href="#配置流程" aria-label="Permalink to &quot;配置流程&quot;">​</a></h2><h3 id="配置ssh密钥" tabindex="-1">配置SSH密钥 <a class="header-anchor" href="#配置ssh密钥" aria-label="Permalink to &quot;配置SSH密钥&quot;">​</a></h3><p>配置 SSH 密钥可以让你安全地连接到 GitHub（无需每次输入密码），以下是详细步骤：</p><ol><li>检查现有 SSH 密钥</li></ol><p>打开终端（Windows 用 Git Bash 或 PowerShell），运行：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ls </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">al ~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ssh</span></span></code></pre></div><ul><li>如果看到 <code>id_rsa.pub</code> 或 <code>id_ed25519.pub</code> 文件，说明已有密钥，可跳过生成步骤。</li><li>如果没有，继续下一步。</li></ul><ol start="2"><li>生成新的 SSH 密钥</li></ol><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ssh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keygen </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t ed25519 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">C </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your_email@example.com&quot;</span></span></code></pre></div><ul><li><code>-t ed25519</code>：指定密钥类型（推荐）。</li><li><code>-C &quot;邮箱&quot;</code>：替换为你的 GitHub 注册邮箱（仅作为注释，不影响功能）。</li></ul><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li>提示 <code>Enter file in which to save the key</code> 时，直接按回车（默认保存到 <code>~/.ssh/id_ed25519</code>）。</li><li>提示 <code>Enter passphrase</code> 时，可设置密码保护密钥（可选，按回车跳过）。</li></ul></div><ol><li>将 SSH 密钥添加到 ssh-agent**</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动 ssh-agent</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eval</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-agent</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加私钥到 ssh-agent</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_ed25519</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>以上需在git环境下运行，推荐<code>Git Bash</code>。</p></div><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加密钥（替换为你的私钥路径）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ssh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">add $</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">env:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USERPROFILE\\.ssh\\id_ed25519</span></span></code></pre></div><ol start="4"><li>验证SSH连接</li></ol><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ssh </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">T git@github.com</span></span></code></pre></div><ul><li>看到 <code>You&#39;ve successfully authenticated</code> 表示成功。</li><li>如果提示 <code>Permission denied</code>，检查公钥是否粘贴完整。</li></ul><h3 id="将公钥添加到-github" tabindex="-1">将公钥添加到 GitHub <a class="header-anchor" href="#将公钥添加到-github" aria-label="Permalink to &quot;将公钥添加到 GitHub&quot;">​</a></h3><ol><li><p><strong>复制公钥内容</strong></p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cat ~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ssh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id_ed25519.pub</span></span></code></pre></div><ul><li>输出以 <code>ssh-ed25519 AAA...</code> 开头的内容，全选复制。</li></ul></li><li><p><strong>登录 GitHub 添加密钥</strong></p><ul><li>进入 <strong><a href="https://github.com/settings/keys" target="_blank" rel="noreferrer">GitHub → Settings → SSH and GPG keys</a></strong>。</li><li>点击 <strong>New SSH key</strong>，填写： <ul><li><strong>Title</strong>：自定义名称（如 <code>My PC</code>）。</li><li><strong>Key type</strong>：保持默认 <code>Authentication Key</code>。</li><li><strong>Key</strong>：粘贴复制的公钥内容。</li></ul></li><li>点击 <strong>Add SSH key</strong> 完成。</li></ul></li></ol><h3 id="配置-git-使用-ssh" tabindex="-1">配置 Git 使用 SSH <a class="header-anchor" href="#配置-git-使用-ssh" aria-label="Permalink to &quot;配置 Git 使用 SSH&quot;">​</a></h3><p>将仓库的远程地址从 HTTPS 改为 SSH：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git remote </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set-url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> origin git@github.com:extrabonus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DocEngine.git</span></span></code></pre></div><p>之后推送代码无需密码：</p><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push origin gh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pages</span></span></code></pre></div><p>系统会跳出以下页面，请登录Github。</p><p><img src="`+l+'" alt="alt text"></p><p>验证git生态。</p><p><img src="'+h+'" alt="alt text"></p><p>登录VS Code。</p><p><img src="'+n+'" alt="alt text"></p><h3 id="启用-github-pages" tabindex="-1">启用 GitHub Pages <a class="header-anchor" href="#启用-github-pages" aria-label="Permalink to &quot;启用 GitHub Pages&quot;">​</a></h3><ol><li>进入仓库的 <strong>Settings</strong> → <strong>Pages</strong>。</li><li>在 <strong>Branch</strong> 处选择部署来源，直接部署分支（如 <code>main</code> 或 <code>gh-pages</code>）</li></ol><p><img src="'+p+'" alt="alt text"></p><ol><li><p>点击 <strong>Save</strong>，等待几分钟，GitHub 会生成一个访问链接（格式：<code>https://&lt;用户名&gt;.github.io/DocEngine/</code>）。</p><p><img src="'+o+`" alt="alt text"></p></li></ol><h2 id="常见问题" tabindex="-1"><strong>常见问题</strong> <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;**常见问题**&quot;">​</a></h2><h3 id="问题1-密钥权限错误" tabindex="-1"><strong>问题1：密钥权限错误</strong> <a class="header-anchor" href="#问题1-密钥权限错误" aria-label="Permalink to &quot;**问题1：密钥权限错误**&quot;">​</a></h3><p>如果报错 <code>Permissions for &#39;id_ed25519&#39; are too open</code>，修复权限：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 600</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_ed25519</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 644</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_ed25519.pub</span></span></code></pre></div><h3 id="问题2-ssh-连接被拒绝" tabindex="-1"><strong>问题2：SSH 连接被拒绝</strong> <a class="header-anchor" href="#问题2-ssh-连接被拒绝" aria-label="Permalink to &quot;**问题2：SSH 连接被拒绝**&quot;">​</a></h3><p>检查 GitHub 的 SSH 端口（22）是否被防火墙拦截，尝试：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 443</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@ssh.github.com</span></span></code></pre></div><p>如果成功，可配置 SSH 强制使用 443 端口：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在 ~/.ssh/config 中添加：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Hostname</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh.github.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  Port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 443</span></span></code></pre></div>`,47)]))}const m=i(d,[["render",r]]);export{y as __pageData,m as default};
