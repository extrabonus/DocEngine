import{_ as a,c as i,o as t,ag as n}from"./chunks/framework.Qw_rGEbp.js";const g=JSON.parse('{"title":"总结练习","description":"","frontmatter":{},"headers":[],"relativePath":"Toolchain/python/practice/dict_lesson.md","filePath":"Toolchain/python/practice/dict_lesson.md"}'),e={name:"Toolchain/python/practice/dict_lesson.md"};function h(o,s,l,r,p,k){return t(),i("div",null,s[0]||(s[0]=[n(`<h1 id="总结练习" tabindex="-1">总结练习 <a class="header-anchor" href="#总结练习" aria-label="Permalink to &quot;总结练习&quot;">​</a></h1><h2 id="题目-1-统计字典中值的频率" tabindex="-1"><strong>题目 1：统计字典中值的频率</strong> <a class="header-anchor" href="#题目-1-统计字典中值的频率" aria-label="Permalink to &quot;**题目 1：统计字典中值的频率**&quot;">​</a></h2><p><strong>任务</strong>：统计字典中每个值出现的频率，并返回一个字典，键为值，频率为值。<br><strong>示例输入</strong>：<code>{&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 1, &quot;d&quot;: 3}</code><br><strong>示例输出</strong>：<code>{1: 2, 2: 1, 3: 1}</code></p><h2 id="题目-2-合并两个字典" tabindex="-1"><strong>题目 2：合并两个字典</strong> <a class="header-anchor" href="#题目-2-合并两个字典" aria-label="Permalink to &quot;**题目 2：合并两个字典**&quot;">​</a></h2><p><strong>任务</strong>：合并两个字典，如果键重复，则使用第二个字典的值覆盖第一个字典的值。<br><strong>示例输入</strong>：<code>{&quot;a&quot;: 1, &quot;b&quot;: 2}</code> 和 <code>{&quot;b&quot;: 3, &quot;c&quot;: 4}</code><br><strong>示例输出</strong>：<code>{&quot;a&quot;: 1, &quot;b&quot;: 3, &quot;c&quot;: 4}</code></p><h2 id="题目-3-反转字典的键值对" tabindex="-1"><strong>题目 3：反转字典的键值对</strong> <a class="header-anchor" href="#题目-3-反转字典的键值对" aria-label="Permalink to &quot;**题目 3：反转字典的键值对**&quot;">​</a></h2><p><strong>任务</strong>：将字典的键值对反转，即键变为值，值变为键。如果值重复，则保留最后一个键。<br><strong>示例输入</strong>：<code>{&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 1}</code><br><strong>示例输出</strong>：<code>{1: &quot;c&quot;, 2: &quot;b&quot;}</code></p><h2 id="题目-4-筛选字典中的特定键" tabindex="-1"><strong>题目 4：筛选字典中的特定键</strong> <a class="header-anchor" href="#题目-4-筛选字典中的特定键" aria-label="Permalink to &quot;**题目 4：筛选字典中的特定键**&quot;">​</a></h2><p><strong>任务</strong>：从字典中筛选出包含指定键的子字典。<br><strong>示例输入</strong>：<code>{&quot;a&quot;: 1, &quot;b&quot;: 2, &quot;c&quot;: 3}</code> 和 <code>[&quot;a&quot;, &quot;c&quot;]</code><br><strong>示例输出</strong>：<code>{&quot;a&quot;: 1, &quot;c&quot;: 3}</code></p><h2 id="题目-5-计算字典中值的总和" tabindex="-1"><strong>题目 5：计算字典中值的总和</strong> <a class="header-anchor" href="#题目-5-计算字典中值的总和" aria-label="Permalink to &quot;**题目 5：计算字典中值的总和**&quot;">​</a></h2><p><strong>任务</strong>：计算字典中所有值的总和。<br><strong>示例输入</strong>：<code>{&quot;a&quot;: 10, &quot;b&quot;: 20, &quot;c&quot;: 30}</code><br><strong>示例输出</strong>：<code>60</code></p><h2 id="答案" tabindex="-1"><strong>答案</strong> <a class="header-anchor" href="#答案" aria-label="Permalink to &quot;**答案**&quot;">​</a></h2><h3 id="答案-1" tabindex="-1"><strong>答案 1</strong> <a class="header-anchor" href="#答案-1" aria-label="Permalink to &quot;**答案 1**&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value_frequency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    freq </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.values():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        freq[value] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> freq.get(value, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> freq</span></span></code></pre></div><h3 id="答案-2" tabindex="-1"><strong>答案 2</strong> <a class="header-anchor" href="#答案-2" aria-label="Permalink to &quot;**答案 2**&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> merge_dicts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d1, d2):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d1, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d2}</span></span></code></pre></div><h3 id="答案-3" tabindex="-1"><strong>答案 3</strong> <a class="header-anchor" href="#答案-3" aria-label="Permalink to &quot;**答案 3**&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> invert_dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {v: k </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k, v </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.items()}</span></span></code></pre></div><h3 id="答案-4" tabindex="-1"><strong>答案 4</strong> <a class="header-anchor" href="#答案-4" aria-label="Permalink to &quot;**答案 4**&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> filter_dict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d, keys):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {k: d[k] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> keys </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d}</span></span></code></pre></div><h3 id="答案-5" tabindex="-1"><strong>答案 5</strong> <a class="header-anchor" href="#答案-5" aria-label="Permalink to &quot;**答案 5**&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sum_values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d.values())</span></span></code></pre></div>`,22)]))}const c=a(e,[["render",h]]);export{g as __pageData,c as default};
